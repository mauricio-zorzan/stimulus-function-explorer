name: Run All Tests (All Functions)

on:
  workflow_dispatch: # Allow manual triggering
  push:
    branches: [main]
    paths: [".github/workflows/run-all-tests.yml"]

jobs:
  test:
    runs-on: ubuntu-22.04-16core
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Cache Matplotlib
        uses: actions/cache@v4
        with:
          path: ~/.cache/matplotlib
          key: ${{ runner.os }}-mpl-cache-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-mpl-cache-

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.5.1

      - name: Install dependencies
        run: |
          chmod +x .devcontainer/commands/pipeline-setup.sh
          .devcontainer/commands/pipeline-setup.sh
          sudo apt-get update && sudo apt-get install -y texlive-latex-extra dvipng cm-super jq gh
          npm i -g aws-cdk

      - name: Install parallelization tool
        run: poetry run pip install pytest-xdist

      - name: Clone External Repository
        run: |
          git clone https://github.com/trilogy-group/coach-bot-external-content-generators.git external-repo
          cd external-repo
          poetry install

      - name: Run ALL tests (no marker filter)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY2 }}
          PLATFORM_GRAPHQL_API_KEY: ${{ secrets.PLATFORM_GRAPHQL_API_KEY }}
          MPLBACKEND: "Agg"
          FIGURE_DPI: "150"
          OMP_NUM_THREADS: "1"
          OPENBLAS_NUM_THREADS: "1"
          NUMEXPR_NUM_THREADS: "1"
        run: |
          cd external-repo
          # Run ALL tests without the drawing_functions marker filter
          poetry run pytest src/content_generators/additional_content/stimulus_image/drawing_functions/tests/ -n 16 --dist=loadscope --durations=20

      - name: Upload test images as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: all-test-images
          path: external-repo/content/tests/*.webp
